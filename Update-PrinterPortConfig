<#
.SYNOPSIS
    Backs up specific registry keys related to printers and port monitors to the current directory.

.EXAMPLE
    BackUp-Registry
    This example backs up the registry keys for printers and port monitors to the current directory.

.NOTES
    The function exports registry keys using the 'Reg export' command.
    The exported files are named 'PrinterListBak.reg' and 'MonitorPortBak.reg'.
#>

Function BackUp-Registry(){
    Write-Host -ForegroundColor Green "Backing up the registry to $(Get-location)"
    Reg export "HKLM\SYSTEM\CurrentControlSet\Control\Print\Printers" .\PrinterListBak.reg
    Reg export "HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors\Standard TCP/IP Port\ports" .\MonitorPortBak.reg
}

<#
.SYNOPSIS
    Retrieves the IP addresses associated with printers and returns them in a custom object list.

.EXAMPLE
    $printerList = Get-PrinterIP
    This example retrieves the IP addresses and other details of printers and stores them in the $printerList variable.

.NOTES
    The function queries the registry to fetch the IP addresses.
    It returns a list of custom objects with properties: PrinterName, Location, Real IP, and DisplayedPort.
    Errors are caught and logged to the console.
#>

Function Get-PrinterIP{

    $list=@()
    $portname = Get-Printer *

    foreach($i in $portname) {

        try{
            $Printer=$(Get-ItemProperty "HKLM:\SYSTEM\CurrentControlSet\Control\Print\Printers\$($i.Name)")
            $OldPortName=$Printer.port
     
            $MonitorKey=$(REG QUERY "HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors\Standard TCP/IP Port\ports\$($OldPortName)" /V "Hostname" 2>$null).split("    ")
            $RealIP=$MonitorKey[16]

        }catch{
            $RealIP=""
            $OldPortName=""
            write-host("Error on $($i.Name)")
        }

        $list += $(""|select-object @{n="PrinterName";e={$i.Name}},@{n="Location";e={$i.Location}},@{n="Real IP";e={$RealIP}},@{n="DisplayedPort";e={($OldPortName)}})
    }
    return($list)
}


<#
.SYNOPSIS
    Updates the IP addresses of printers based on a provided list of printer details.

.PARAMETER printerList
    Specifies the list of printers with details to be updated.
    [Default: None]

.EXAMPLE
    Set-PrinterIP $printerList
    This example updates the IP addresses of printers based on the details in the $printerList variable.

.NOTES
    The function first calls BackUp-Registry to back up the relevant registry keys.
    It then iteratively updates the registry keys for each printer in the list.
    User confirmation is required for each update.
    The function restarts the Spooler service after completing the updates.
#>

Function Set-PrinterIP($printerList){
    BackUp-Registry

    $ans='y'
    foreach($i in $printerList){
        if($i.DisplayedPort -ne $i."Real IP" -AND $i."Real IP" -ne ""){

            #Confirm one at a time or all
            if($ans.ToLower() -eq 'y'){
                Write-Host "Change $($i.PrinterName,$i.DisplayedPort) to $($i."Real IP")"
                $ans=Read-host "[Y] Yes  [A] Yes to All  [H] Halt Command (Default: H)"
                
                #If not entered, set to y
                if ([string]::IsNullOrWhiteSpace($ans)){
                    $ans='h'
                }
            }
            #if not y or a break the loop
            if($ans.ToLower() -notin @("y","a")){break}

            
            #Change Current Port Name to new IP
            Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Print\Printers\$($i.PrinterName)" -Name port -value $i."Real IP"
        
            #Change monitor key name to new port name
            Rename-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Print\Monitors\Standard TCP/IP Port\Ports\$($i.DisplayedPort)" -NewName $i."Real IP"
        }
    }
}



$printerList = Get-PrinterIP

Set-PrinterIP $printerList

Restart-Service -Force Spooler -confirm


